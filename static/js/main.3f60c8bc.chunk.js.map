{"version":3,"sources":["store/actions/actionTypes.js","components/Navigation/SideDrawer/SideDrawer.module.css","hoc/HOCAUX.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","components/Navigation/Toolbar/Toolbar.module.css","axios-orders.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Backdrop/Backdrop.js","App.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","store/reducers/auth.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","hoc/AsyncComponent.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","module","exports","HOCAUX","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","ingredients","salad","bacon","meat","cheese","purchaseBurger","orderData","token","axiosOrders","post","then","res","id","orderId","purchaseBurgerSuccess","data","catch","err","error","purchaseInit","fetchOrders","userId","queryParams","get","orders","fetchedOrders","key","push","API_KEY","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","time","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","axios","expDate","Date","getTime","expiresIn","setItem","localId","response","setAuthRedirectPath","path","authCheckState","getItem","expirationDate","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","initialState","loading","authRedirectPath","reducer","state","action","updateObject","oldObject","updatedProperties","totalPrice","building","INGREDIENT_PRICES","purchased","purchaseBurgerStart","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","AsyncComponent","importComponent","component","cmp","setState","default","Cmp","this","Component","logo","Logo","style","height","marginBottom","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","showSideDrawer","SideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","Logout","onLogout","actions","Checkout","Auth","BurgerBuilder","Orders","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","composeEnhancers","compose","combineReducers","burgerBuilder","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f60c8bc.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2N-7A\",\"Logo\":\"SideDrawer_Logo__36xrA\",\"Open\":\"SideDrawer_Open__17zkx\",\"Close\":\"SideDrawer_Close__3RkeW\"};","const HOCAUX = props => props.children;\r\n\r\nexport default HOCAUX;\r\n","import * as actionTypes from './actionTypes';\r\n// import axiosOrders from '../../axios-orders';\r\n\r\nexport const addIngredient = name => {\r\n  //   console.log('[burgerBuilder.js] inside action creator');\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = name => {\r\n  //   console.log('[burgerBuilder.js] inside action creator');\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n  // console.log('[burgerBuilder.js] action creator : fetch failed');\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return dispatch => {\r\n    dispatch(setIngredients({ salad: 0, bacon: 0, meat: 0, cheese: 0 }));\r\n  };\r\n  // return dispatch => {\r\n  // this will grab the information from the most recent order\r\n  //   axiosOrders\r\n  //     .get('/orders.json?auth=' + token)\r\n  //     .then(response => {\r\n  //       const ingredients = Object.values(response.data).reverse()[0]\r\n  //         .ingredients;\r\n  //       dispatch(setIngredients(ingredients));\r\n  //       return response;\r\n  //     })\r\n  //     // if there is no catch block, then block runs and you will get undefined cases\r\n  //     // the catch block can still run if then returns nothing\r\n  //     .catch(error => {\r\n  //       dispatch(fetchIngredientsFailed());\r\n  //       return error;\r\n  //     });\r\n  // };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axiosOrders from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n  // no need for logs with redux devtools\r\n  //   console.log('====================================');\r\n  //   console.log('[order.js] purchaseBurger action');\r\n  //   console.log('====================================');\r\n  return dispatch => {\r\n    dispatch(purchaseBurgerStart());\r\n    axiosOrders\r\n      .post('/orders.json?auth=' + token, orderData)\r\n      .then(res => {\r\n        dispatch(purchaseBurgerSuccess(res.data.name, orderData));\r\n        return res;\r\n      })\r\n      .catch(err => {\r\n        dispatch(purchaseBurgerFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return dispatch => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&=equalTo=\"${userId}\"`;\r\n    axiosOrders\r\n      // pass the token from firebase\r\n      .get('/orders.json' + queryParams)\r\n      .then(res => {\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({ ...res.data[key], id: key });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchOrdersFail(err));\r\n      });\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\n// firebase API\r\nconst baseFirebaseURL = 'https://identitytoolkit.googleapis.com/v1';\r\nconst API_KEY = 'AIzaSyBl6sS0LG04ZZdUIOGGUtKbtk3ayGDnDGw';\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = time => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, time * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url = `${baseFirebaseURL}/accounts:signUp?key=${API_KEY}`;\r\n    if (!isSignUp) {\r\n      url = `${baseFirebaseURL}/accounts:signInWithPassword?key=${API_KEY}`;\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then(res => {\r\n        const expDate = new Date(\r\n          new Date().getTime() + res.data.expiresIn * 1000,\r\n        );\r\n        // persistent state in local storage\r\n        localStorage.setItem('token', res.data.idToken);\r\n        localStorage.setItem('expirationDate', expDate);\r\n        localStorage.setItem('userId', res.data.localId);\r\n        // redux sync interactions\r\n        dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n        dispatch(checkAuthTimeout(res.data.expiresIn));\r\n      })\r\n      .catch(err => {\r\n        //   axios stores it very strange\r\n        dispatch(authFail(err.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate > new Date()) {\r\n        const userId = localStorage.getItem('userId');\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000,\r\n          ),\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    }\r\n  };\r\n};\r\n","export {\r\n  addIngredient,\r\n  removeIngredient,\r\n  initIngredients,\r\n} from './burgerBuilder';\r\n\r\nexport { purchaseBurger, purchaseInit, fetchOrders } from './order';\r\n\r\nexport { auth, logout, setAuthRedirectPath, authCheckState } from './auth';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2oIeR\",\"Logo\":\"Toolbar_Logo__2_tjE\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2TfSa\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://react-my-burger-e7b05.firebaseio.com/',\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1LSZ5\",\"active\":\"NavigationItem_active__19kEY\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = props => {\r\n  return (\r\n    props.show && (\r\n      <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default backdrop;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2aT_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3nxAF\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3_jad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1yKsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1WD9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3_oSs\"};","import * as actionTypes from '../actions/actionTypes';\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: '/',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return { ...state, error: null, loading: true };\r\n\r\n    case actionTypes.AUTH_FAIL:\r\n      return { ...state, error: action.error, loading: false };\r\n\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        userId: null,\r\n      };\r\n\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return {\r\n        ...state,\r\n        authRedirectPath: action.path,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 6,\r\n  error: false,\r\n  building: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        },\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true,\r\n      };\r\n\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return updateObject(state, {\r\n        ingredients: action.ingredients,\r\n        error: false,\r\n        totalPrice: 6,\r\n        building: false,\r\n      });\r\n\r\n    // return {\r\n    //   ...state,\r\n    //   ingredients: action.ingredients,\r\n    //   error: false,\r\n    //   totalPrice: 6,\r\n    // };\r\n\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: updateObject(state.ingredients, {\r\n      [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n    }),\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n    building: true,\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// AUX functions\r\nconst purchaseInit = state => {\r\n  return {\r\n    ...state,\r\n    purchased: false,\r\n  };\r\n};\r\nconst purchaseBurgerStart = state => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n  };\r\n};\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = {\r\n    ...action.orderData,\r\n    id: action.orderId,\r\n  };\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    purchased: true,\r\n    orders: [...state.orders, newOrder],\r\n  };\r\n};\r\nconst purchaseBurgerFail = state => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nconst fetchOrdersStart = state => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n  };\r\n};\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    orders: action.orders,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: action.error,\r\n    loading: false,\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import React, { Component } from 'react';\r\n\r\nconst AsyncComponent = importComponent => {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        component: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      importComponent().then(cmp => {\r\n        this.setState({ component: cmp.default });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const Cmp = this.state.component;\r\n      return Cmp && <Cmp {...this.props} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default AsyncComponent;\r\n","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = props => {\r\n  return (\r\n    <div\r\n      className={classes.Logo}\r\n      style={{ height: props.height, marginBottom: '32px' }}>\r\n      <img src={burgerLogo} alt='BurgerMax' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = props => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink\r\n        exact={props.exact}\r\n        to={props.link}\r\n        activeClassName={classes.active}>\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = props => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem active exact link='/'>\r\n        Burger Builder\r\n      </NavigationItem>\r\n      {props.isAuthenticated && (\r\n        <NavigationItem link='/orders'>Orders</NavigationItem>\r\n      )}\r\n      {props.isAuthenticated ? (\r\n        <NavigationItem link='/logout'>Logout</NavigationItem>\r\n      ) : (\r\n        <NavigationItem link='/auth'>Authenticate</NavigationItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = props => {\r\n  return (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = props => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.drawerToggleClicked} />\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuthenticated={props.isAuth} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Hocaux from '../../../hoc/HOCAUX';\r\n\r\nconst sideDrawer = props => {\r\n  let attachedClasses = [classes.SideDrawer, classes.Close];\r\n  if (props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n  return (\r\n    <Hocaux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Hocaux>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Hocaux from '../../hoc/HOCAUX';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  // drawer handlers\r\n  SideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState(prevState => ({ showSideDrawer: !prevState.showSideDrawer }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Hocaux>\r\n        <Toolbar\r\n          isAuth={this.props.isAuthenticated}\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.isAuthenticated}\r\n          closed={this.SideDrawerClosedHandler}\r\n          open={this.state.showSideDrawer}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Hocaux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions';\r\n\r\nclass Logout extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n  render() {\r\n    return <Redirect to='/auth' />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from 'react';\nimport AsyncComponent from './hoc/AsyncComponent';\nimport * as actions from './store/actions';\nimport { connect } from 'react-redux';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n// styling for app\nimport classes from './App.module.css';\n// sync components\nimport Layout from './components/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\n// lazy loading\nconst Checkout = AsyncComponent(() => import('./containers/Checkout/Checkout'));\nconst Auth = AsyncComponent(() => import('./containers/Auth/Auth'));\nconst BurgerBuilder = AsyncComponent(() =>\n  import('./containers/BurgerBuilder/BurgerBuilder'),\n);\nconst Orders = AsyncComponent(() => import('./containers/Orders/Orders'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/' component={BurgerBuilder} />\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/checkout' component={Checkout} />\n          <Route path='/orders' component={Orders} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/auth' component={Auth} />\n          <Route path='/' component={BurgerBuilder} />\n          <Redirect to='/' />\n        </Switch>\n      );\n    }\n    return (\n      <div className={classes.App}>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport authReducer from './store/reducers/auth';\nimport reduxThunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\n\n// use env variables to selectively use redux DevTools\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst reducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(reduxThunk)),\n);\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}