{"version":3,"sources":["containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","components/UI/Button/Button.js","components/UI/Modal/Modal.js","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/UI/Modal/Modal.module.css","components/Burger/Burger.module.css","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Order/CheckoutSummary/CheckoutSummary/CheckoutSummary.module.css"],"names":["module","exports","checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","orderHandler","event","preventDefault","formData","formElementIdentifier","state","orderForm","value","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","valid","checkValidity","validation","touched","formIsValid","setState","errorMessage","name","elementType","elementConfig","type","placeholder","required","street","zipCode","minLength","maxLength","country","email","isEmail","deliveryMethod","options","displayValue","rules","isValid","trim","length","test","String","toLowerCase","formElementsArray","key","this","push","id","config","form","onSubmit","map","el","Input","shouldValidate","invalid","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axiosOrders","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component","spinner","Loader","button","join","onClick","children","Modal","nextProps","nextState","show","modalClosed","transform","opacity","React","WrappedComponent","errorConfirmedHandler","error","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","eject","message","input","inputElement","inputClasses","InputElement","Invalid","onChange","option","Label","label","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","igKey","Array","_","index","reduce","arr","concat"],"mappings":"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","file":"static/js/3.ce3b6cdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__29qNK\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary/CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes good</h1>\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType='Danger' clicked={props.checkoutCancelled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType='Success' clicked={props.checkoutContinued}>\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axiosOrders from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass ContactData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: null,\r\n      orderForm: {\r\n        name: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'Your Name',\r\n          },\r\n          validation: {\r\n            required: true,\r\n          },\r\n          valid: false,\r\n          value: '',\r\n          touched: false,\r\n        },\r\n        street: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'Street',\r\n          },\r\n          validation: {\r\n            required: true,\r\n          },\r\n          valid: false,\r\n          value: '',\r\n          touched: false,\r\n        },\r\n        zipCode: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'ZIP Code',\r\n          },\r\n          validation: {\r\n            required: true,\r\n            minLength: 4,\r\n            maxLength: 6,\r\n          },\r\n          valid: false,\r\n          value: '',\r\n          touched: false,\r\n        },\r\n        country: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'Country',\r\n          },\r\n          validation: {\r\n            required: true,\r\n          },\r\n          valid: false,\r\n          value: '',\r\n          touched: false,\r\n        },\r\n        email: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            type: 'email',\r\n            placeholder: 'Your E-mail',\r\n          },\r\n          validation: {\r\n            required: true,\r\n            isEmail: true,\r\n          },\r\n          valid: false,\r\n          value: '',\r\n          touched: false,\r\n        },\r\n        deliveryMethod: {\r\n          elementType: 'select',\r\n          elementConfig: {\r\n            options: [\r\n              { value: 'fastest', displayValue: 'Fastest' },\r\n              { value: 'cheapest', displayValue: 'Cheapest' },\r\n            ],\r\n          },\r\n          value: 'fastest',\r\n          valid: true,\r\n          validation: {},\r\n        },\r\n      },\r\n      formIsValid: false,\r\n    };\r\n  }\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    // for in is great for objects\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    // make sure all the validations pass\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      isValid = re.test(String(value).toLowerCase()) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    // deep clone needs multiple spread operators to avoid pointers\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm,\r\n    };\r\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(el => (\r\n          <Input\r\n            key={el.id}\r\n            touched={el.config.touched}\r\n            shouldValidate={el.config.validation}\r\n            invalid={!el.config.valid}\r\n            elementType={el.config.elementType}\r\n            elementConfig={el.config.elementConfig}\r\n            value={el.config.value}\r\n            changed={event => this.inputChangedHandler(event, el.id)}\r\n          />\r\n        ))}\r\n        <Button btnType='Success' disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withErrorHandler(ContactData, axiosOrders));\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n  // This is too late as it doesn't prevent the rendering with the old props\r\n  // we need to init the purchase in the burgerBuilder\r\n  // UNSAFE_componentWillMount() {\r\n  //   this.props.onInitPurchase();\r\n  // }\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  };\r\n  render() {\r\n    let summary = <Redirect to='/' />;\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to='/' />\r\n      ) : null;\r\n\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + '/contact-data'}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n  return <div className={classes.Loader}>Loading..</div>;\r\n};\r\n\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3lUvp\",\"load2\":\"Spinner_load2__2Ao1I\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = props => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}>\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Hocaux from '../../../hoc/HOCAUX';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport propTypes from 'prop-types';\r\n\r\nclass Modal extends React.Component {\r\n  // only render the order summary in the virtual DOM if\r\n  // the modal is shown or the order summary changes\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Hocaux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: this.props.show ? '1' : '0',\r\n          }}>\r\n          {this.props.children}\r\n        </div>\r\n      </Hocaux>\r\n    );\r\n  }\r\n}\r\n\r\n// prop type validation\r\nModal.propTypes = {\r\n  modalClosed: propTypes.func,\r\n  show: propTypes.bool,\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3bMLs\",\"Success\":\"Button_Success__274aK\",\"Danger\":\"Button_Danger__2LNAf\"};","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Hocaux from '../HOCAUX';\r\n\r\nconst withErrorHandler = (WrappedComponent, axiosOrders) => {\r\n  // anonymous class\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n      };\r\n\r\n      // need to initialize the interceptors in the constructor before the children are mounted and reach out to the web\r\n      this.requestInterceptor = axiosOrders.interceptors.request.use(req => {\r\n        // console.log('====================================');\r\n        // console.log('[withErrorHandler.js] request intercepted');\r\n        // console.log('====================================');\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.responseInterceptor = axiosOrders.interceptors.response.use(\r\n        res => {\r\n          // console.log('====================================');\r\n          // console.log('[withErrorHandler.js] response intercepted');\r\n          // console.log('====================================');\r\n          return res;\r\n        },\r\n        error => {\r\n          // console.log('====================================');\r\n          // console.log('[withErrorHandler.js] error registered');\r\n          // console.log('====================================');\r\n          this.setState({ error: error });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      // this allows for reuse of this HOC\r\n      axiosOrders.interceptors.request.eject(this.requestInterceptor);\r\n      axiosOrders.interceptors.response.eject(this.responseInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Hocaux>\r\n          <Modal\r\n            show={this.state.error !== null}\r\n            modalClosed={this.errorConfirmedHandler}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Hocaux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__VYISq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2YaBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__IliSG\",\"BreadTop\":\"BurgerIngredient_BreadTop__1zCto\",\"Seeds1\":\"BurgerIngredient_Seeds1__1FZML\",\"Seeds2\":\"BurgerIngredient_Seeds2__2LMlb\",\"Meat\":\"BurgerIngredient_Meat__2qZ7s\",\"Cheese\":\"BurgerIngredient_Cheese__PR_g0\",\"Salad\":\"BurgerIngredient_Salad__8LqPb\",\"Bacon\":\"BurgerIngredient_Bacon__sCM6W\"};","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case 'input':\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'textarea':\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case 'select':\r\n      inputElement = (\r\n        <select\r\n          onChange={props.changed}\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}>\r\n          {props.elementConfig.options.map(option => (\r\n            <option value={option.value} key={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          onChange={props.changed}\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3y9dP\",\"Label\":\"Input_Label__1mc4o\",\"InputElement\":\"Input_InputElement__L7XII\",\"Invalid\":\"Input_Invalid__1RGfb\",\"ValidationError\":\"Input_ValidationError__1sFzt\"};","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case 'bread-bottom':\r\n        ingredient = <div className={classes.BreadBottom}> </div>;\r\n        break;\r\n      case 'bread-top':\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case 'meat':\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case 'cheese':\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case 'salad':\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n      case 'bacon':\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n        break;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\n// you need to pass a string to the BurgerIngredient\r\nBurgerIngredient.propTypes = {\r\n  type: propTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport { withRouter } from 'react-router-dom';\r\nconst burger = props => {\r\n  // console.log(props);\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      // 1. return an empty an array of empty arrays of length equal to the number of each ingredient\r\n      // 2. return the burger ingredient with the label\r\n      return [...Array(props.ingredients[igKey])].map((_, index) => {\r\n        return <BurgerIngredient key={igKey + index} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type='bread-top' />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type='bread-bottom' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(burger);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1oPzm\"};"],"sourceRoot":""}